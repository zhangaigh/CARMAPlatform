<?xml version="1.0"?>
<!--
  Copyright (C) 2018-2019 LEIDOS.

  Licensed under the Apache License, Version 2.0 (the "License"); you may not
  use this file except in compliance with the License. You may obtain a copy of
  the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  License for the specific language governing permissions and limitations under
  the License.
-->
<!--
	drivers.launch

This file is used for vehicle configurations. The arguments from saxton_cav.launch should pass on to saxton_cav_src.launch, which should then pass those arguments to this file. The arguments in the saxton_cav.launch file will override all of the default values of the arguments being passed, so you should be making changes to the saxton_cav.launch to configure it to your vehicle. 

If not using simulated drivers they are activated if the respective mock arguments being passed in are false. These lines below activate the respective actual driver if the respective mock argument being passed is false.

-->

<launch>

  <!-- Directory of Parameter Files -->
  <arg name="CARMA_DIR" default="$(find carma)" doc="The path of the package directory"/>
  <arg name="PARAM_DIR" default="$(arg CARMA_DIR)/launch/params" doc="Directory of yaml parameter files"/>

  <!-- Simulation Usage -->
  <arg name="mock_can"            	default="true" doc="True if using a simulated can driver"/>
  <arg name="mock_dsrc"           	default="true" doc="True if using a simulated dsrc driver"/>
  <arg name="mock_srx_controller" 	default="true" doc="True if using a simulated srx controller driver"/>
  <arg name="mock_pinpoint"       	default="true" doc="True if using a simulated pinpoint driver"/>
  <arg name="mock_radar"          	default="true" doc="True if using a simulated radar driver"/>
  <arg name="mock_lateral_controller"   default="true" doc="True if using a simulated lateral controller"/>

  <!-- DSRC OBU Driver Node -->
  <include unless="$(arg mock_dsrc)" file="$(find dsrc_driver)/launch/dsrc_node.launch"/>
      
  <!-- PinPoint Driver Node -->
  <include unless="$(arg mock_pinpoint)" file="$(find pinpoint)/launch/pinpoint.launch"/>

  <!-- SRX CAN Driver Node -->
  <include unless="$(arg mock_can)" file="$(find srx_can_driver)/launch/srx_can_driver_socketcan.launch">
    <arg name="srx_can_can_device" value="can2" />
  </include>

  <!--SRX Controller Driver Node-->
  <include unless="$(arg mock_srx_controller)" file="$(find srx_controller)/launch/srx_controller.launch">

    <!-- Low Speed Values -->
    <arg name="k_p" value="0.5" />
    <arg name="k_i" value="0.003" />
    <arg name="k_d" value="0.04" />
    <!-- HighSpeed Values -->
    <!--
    <arg name="k_p" default="0.1" />
    <arg name="k_i" default="0.01" />
    <arg name="k_d" default="0.005" />
    -->
    <arg name="srx_controller_can_device" value="can1"/>
  </include>
      
  <!-- SRX Radar Driver Node -->
  <include unless="$(arg mock_radar)" file="$(find srx_objects)/launch/srx_objects_socketcan.launch">
    <arg name="srx_objects_can_device" value="can0"/>
  </include>
	
</launch>
